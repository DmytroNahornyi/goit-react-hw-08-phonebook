{"version":3,"file":"static/js/234.d7336014.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  /* border-bottom: 1px solid black; */\n  padding: 5px 10px;\n\n  background-color: rgb(238, 250, 238);\n  border-radius: 8px;\n  color: #000;\n\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n\n  & button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    border: none;\n    padding: 2px 4px;\n    border-radius: 5px;\n    background-color: #2c3e50;\n    color: #fff;\n\n    transition: background-color 250ms linear;\n\n    & svg {\n      width: 30px;\n      height: auto;\n    }\n\n    &:disabled {\n      opacity: 20%;\n    }\n\n    &:hover {\n      background-color: red;\n    }\n  }\n`;\n\nexport const ContactWrap = styled.div`\n  display: flex;\n  gap: 5px;\n\n  @media screen and (max-width: 480px) {\n    flex-direction: column;\n    font-size: 17px;\n  }\n`;\n\nexport const TelLink = styled.a`\n  border-bottom: solid 1px #fff;\n\n  &:hover {\n    color: #2c3e50;\n    border-bottom: solid 1px #2c3e50;\n  }\n`;\n\nexport const ButtonsWrap = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { TiDeleteOutline } from 'react-icons/ti';\n\nimport Loader from 'components/Loader/Loader';\n\nimport { deleteContactThunk } from 'redux/thunk/contactsThunk';\nimport { selectIsLoading } from 'redux/selector/selectors';\n\nimport { ButtonsWrap, ContactWrap, Item, TelLink } from './ContactItem.styled';\n\nconst ContactItems = ({ visibleContacts }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const handelDelete = id => {\n    dispatch(deleteContactThunk(id))\n      .unwrap()\n      .then(user => {\n        toast.success(`${user.name} removed from contacts.`);\n      })\n      .catch(() => toast.error('Sorry something went wrong try again'));\n  };\n\n  return (\n    <ul>\n      {visibleContacts.map(({ id, name, number }) => {\n        return (\n          <Item key={id}>\n            <ContactWrap>\n              <p>{name}: </p> <TelLink href={`tel:${number}`}>{number}</TelLink>\n            </ContactWrap>\n            <ButtonsWrap>\n              {isLoading && <Loader size={'30'} />}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  handelDelete(id);\n                }}\n                disabled={isLoading}\n              >\n                <TiDeleteOutline />\n              </button>\n            </ButtonsWrap>\n          </Item>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactItems;\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 30px;\n  font-size: 16px;\n  padding: 5px;\n  border-radius: 5px;\n  border: 2px solid #ccc;\n\n  &:focus {\n    outline: none;\n    border: 2px solid #333;\n  }\n`;\n\nexport const Label = styled.label`\n  margin-right: 10px;\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n  color: #000;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getVisibleContact } from 'redux/filterSlice/filterSlice';\nimport { FilterWrapper, Input, Label } from './Filter.styled';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filterValue);\n\n  return (\n    <FilterWrapper>\n      <Label>Find contacts by name</Label>\n      <Input\n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(getVisibleContact(e.target.value))}\n        placeholder=\"search\"\n      />\n    </FilterWrapper>\n  );\n}\n\nexport default Filter;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ContactsWrap = styled.div`\n  margin: 0 auto;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: rgb(150, 150, 150) 10px 10px 20px;\n\n  @media screen and (min-width: 1280px) {\n    width: 600px;\n    margin: 0 auto;\n  }\n`;\n\nexport const AddLink = styled(Link)`\n  color: rgb(0, 177, 163);\n`;\n\nexport const WelcomeMessage = styled.p`\n  text-align: center;\n`;\n\nexport const ContactContainer = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  padding: 20px 30px;\n\n  background-color: #fff;\n\n  @media screen and (min-width: 1280px) {\n    width: 600px;\n    margin: 0 auto;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { motion } from 'framer-motion';\n\nimport ContactItems from '../ContactItem/ContactItem';\nimport Loader from 'components/Loader/Loader';\nimport Filter from '../Filter/Filter';\n\nimport {\n  selectContacts,\n  selectFilter,\n  selectIsLoading,\n  selectIsRefreshing,\n  selectUser,\n} from 'redux/selector/selectors';\n\nimport {\n  AddLink,\n  ContactContainer,\n  ContactsWrap,\n  WelcomeMessage,\n} from './ContactList.styled';\n\nfunction ContactList() {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const user = useSelector(selectUser);\n  const isRefreshing = useSelector(selectIsRefreshing);\n\n  const isContactsEmpty = Boolean(contacts.length);\n  const normalizeFilter = filter.toLowerCase();\n  const visibleContacts = contacts.filter(el =>\n    el.name.toLowerCase().includes(normalizeFilter)\n  );\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, scale: 0.75 }}\n      animate={{ opacity: 1, scale: 1 }}\n      transition={{\n        duration: 0.8,\n        delay: 0.2,\n        ease: [0, 0.71, 0.2, 1.01],\n      }}\n    >\n      {(isRefreshing || isLoading) && !isContactsEmpty && <Loader />}\n      <ContactsWrap>\n        {!isContactsEmpty && !isRefreshing && !isLoading && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0.75 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{\n              duration: 0.8,\n              delay: 0.2,\n              ease: [0, 0.71, 0.2, 1.01],\n            }}\n          >\n            <ContactContainer>\n              <WelcomeMessage>\n                Hello {user.name} please{' '}\n                {<AddLink to=\"/phone-book/add\">add</AddLink>} your first contact\n              </WelcomeMessage>\n            </ContactContainer>\n          </motion.div>\n        )}\n\n        {isContactsEmpty && (\n          <>\n            <Filter />\n            <ContactContainer>\n              {!visibleContacts.length && <p>No matches</p>}\n              {visibleContacts && (\n                <ContactItems visibleContacts={visibleContacts} />\n              )}\n            </ContactContainer>\n          </>\n        )}\n      </ContactsWrap>\n    </motion.div>\n  );\n}\n\nexport default ContactList;\n"],"names":["Item","styled","ContactWrap","TelLink","ButtonsWrap","visibleContacts","dispatch","useDispatch","isLoading","useSelector","selectIsLoading","map","id","name","number","href","Loader","size","type","onClick","deleteContactThunk","unwrap","then","user","toast","catch","handelDelete","disabled","FilterWrapper","Input","Label","filter","state","filterValue","value","onChange","e","getVisibleContact","target","placeholder","ContactsWrap","AddLink","Link","WelcomeMessage","ContactContainer","contacts","selectContacts","selectFilter","selectUser","isRefreshing","selectIsRefreshing","isContactsEmpty","Boolean","length","normalizeFilter","toLowerCase","el","includes","motion","initial","opacity","scale","animate","transition","duration","delay","ease","to","ContactItem"],"sourceRoot":""}